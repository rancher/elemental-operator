// /*
// Copyright Â© 2022 - 2025 SUSE LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// */
//
//

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rancher/elemental-operator/pkg/util (interfaces: NetController)
//
// Generated by this command:
//
//	mockgen-v0.4.0 -copyright_file=scripts/boilerplate.go.txt -destination=pkg/util/mocks/net_controller.go -package=mocks github.com/rancher/elemental-operator/pkg/util NetController
//

// Package mocks is a generated GoMock package.
package mocks

import (
	net "net"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockNetController is a mock of NetController interface.
type MockNetController struct {
	ctrl     *gomock.Controller
	recorder *MockNetControllerMockRecorder
}

// MockNetControllerMockRecorder is the mock recorder for MockNetController.
type MockNetControllerMockRecorder struct {
	mock *MockNetController
}

// NewMockNetController creates a new mock instance.
func NewMockNetController(ctrl *gomock.Controller) *MockNetController {
	mock := &MockNetController{ctrl: ctrl}
	mock.recorder = &MockNetControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNetController) EXPECT() *MockNetControllerMockRecorder {
	return m.recorder
}

// GetInterfaceAddresses mocks base method.
func (m *MockNetController) GetInterfaceAddresses(arg0 string) []net.IPNet {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInterfaceAddresses", arg0)
	ret0, _ := ret[0].([]net.IPNet)
	return ret0
}

// GetInterfaceAddresses indicates an expected call of GetInterfaceAddresses.
func (mr *MockNetControllerMockRecorder) GetInterfaceAddresses(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInterfaceAddresses", reflect.TypeOf((*MockNetController)(nil).GetInterfaceAddresses), arg0)
}
